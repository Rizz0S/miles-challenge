{"version":3,"sources":["node_modules/redux-undo/dist/redux-undo.js"],"names":[],"mappings":"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","file":"redux-undo.eaf4fece.js","sourceRoot":"..","sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.ReduxUndo=e():t.ReduxUndo=e()}(window,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=0)}([function(t,e,n){t.exports=n(1)},function(t,e,n){\"use strict\";n.r(e);var r,o,i={UNDO:\"@@redux-undo/UNDO\",REDO:\"@@redux-undo/REDO\",JUMP_TO_FUTURE:\"@@redux-undo/JUMP_TO_FUTURE\",JUMP_TO_PAST:\"@@redux-undo/JUMP_TO_PAST\",JUMP:\"@@redux-undo/JUMP\",CLEAR_HISTORY:\"@@redux-undo/CLEAR_HISTORY\"},u={undo:function(){return{type:i.UNDO}},redo:function(){return{type:i.REDO}},jumpToFuture:function(t){return{type:i.JUMP_TO_FUTURE,index:t}},jumpToPast:function(t){return{type:i.JUMP_TO_PAST,index:t}},jump:function(t){return{type:i.JUMP,index:t}},clearHistory:function(){return{type:i.CLEAR_HISTORY}}};function c(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return Array.isArray(t)?t:\"string\"==typeof t?[t]:e}function a(t){return void 0!==t.present&&void 0!==t.future&&void 0!==t.past&&Array.isArray(t.future)&&Array.isArray(t.past)}function p(t){var e=c(t);return function(t){return e.indexOf(t.type)>=0}}function l(t){var e=c(t);return function(t){return e.indexOf(t.type)<0}}function f(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return e.reduce((function(t,e){return function(n,r,o){return t(n,r,o)&&e(n,r,o)}}),(function(){return!0}))}function s(t){var e=c(t);return function(t){return e.indexOf(t.type)>=0?t.type:null}}function d(t,e,n){return{past:t,present:e,future:n,group:arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,_latestUnfiltered:e,index:t.length,limit:t.length+n.length+1}}function y(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}var g={prevState:\"#9E9E9E\",action:\"#03A9F4\",nextState:\"#4CAF50\"};function v(t,e,n){return[\"%c\".concat(t),\"color: \".concat(e,\"; font-weight: bold\"),n]}function O(t,e){o={header:[],prev:[],action:[],next:[],msgs:[]},r&&(console.group?(o.header=[\"%credux-undo\",\"font-style: italic\",\"action\",t.type],o.action=v(\"action\",g.action,t),o.prev=v(\"prev history\",g.prevState,e)):(o.header=[\"redux-undo action\",t.type],o.action=[\"action\",t],o.prev=[\"prev history\",e]))}function T(t){var e,n,i,u,c,a,p,l,f,s,d,O,T,b,m,h;r&&(console.group?o.next=v(\"next history\",g.nextState,t):o.next=[\"next history\",t],O=(d=o).header,T=d.prev,b=d.next,m=d.action,h=d.msgs,console.group?((e=console).groupCollapsed.apply(e,y(O)),(n=console).log.apply(n,y(T)),(i=console).log.apply(i,y(m)),(u=console).log.apply(u,y(b)),(c=console).log.apply(c,y(h)),console.groupEnd()):((a=console).log.apply(a,y(O)),(p=console).log.apply(p,y(T)),(l=console).log.apply(l,y(m)),(f=console).log.apply(f,y(b)),(s=console).log.apply(s,y(h))))}function b(){if(r){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];o.msgs=o.msgs.concat([].concat(e,[\"\\n\"]))}}function m(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function h(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?m(Object(n),!0).forEach((function(e){x(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function x(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function j(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function A(t,e){var n=d([],t,[]);return e&&(n._latestUnfiltered=null),n}function _(t,e,n,r){var o=t.past.length+1;b(\"inserting\",e),b(\"new free: \",n-o);var i=t.past,u=t._latestUnfiltered,c=n&&n<=o,a=i.slice(c?1:0);return d(null!=u?[].concat(j(a),[u]):a,e,[],r)}function P(t,e){if(e<0||e>=t.future.length)return t;var n=t.past,r=t.future,o=t._latestUnfiltered;return d([].concat(j(n),[o],j(r.slice(0,e))),r[e],r.slice(e+1))}function S(t,e){if(e<0||e>=t.past.length)return t;var n=t.past,r=t.future,o=t._latestUnfiltered,i=n.slice(0,e),u=[].concat(j(n.slice(e+1)),[o],j(r));return d(i,n[e],u)}function U(t,e){return e>0?P(t,e-1):e<0?S(t,t.past.length+e):t}function w(t,e){return e.indexOf(t)>-1?t:!t}function E(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e=n.debug,r=e;var o,u=h({limit:void 0,filter:function(){return!0},groupBy:function(){return null},undoType:i.UNDO,redoType:i.REDO,jumpToPastType:i.JUMP_TO_PAST,jumpToFutureType:i.JUMP_TO_FUTURE,jumpType:i.JUMP,neverSkipReducer:!1,ignoreInitialState:!1,syncFilter:!1},n,{initTypes:c(n.initTypes,[\"@@redux-undo/INIT\"]),clearHistoryType:c(n.clearHistoryType,[i.CLEAR_HISTORY])}),p=u.neverSkipReducer?function(e,n){for(var r=arguments.length,o=new Array(r>2?r-2:0),i=2;i<r;i++)o[i-2]=arguments[i];return h({},e,{present:t.apply(void 0,[e.present,n].concat(o))})}:function(t){return t};return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};O(n,e);for(var r,i=e,c=arguments.length,l=new Array(c>2?c-2:0),f=2;f<c;f++)l[f-2]=arguments[f];if(!o){if(b(\"history is uninitialized\"),void 0===e){var s={type:\"@@redux-undo/CREATE_HISTORY\"},y=t.apply(void 0,[e,s].concat(l));return i=A(y,u.ignoreInitialState),b(\"do not set initialState on probe actions\"),T(i),i}a(e)?(i=o=u.ignoreInitialState?e:d(e.past,e.present,e.future),b(\"initialHistory initialized: initialState is a history\",o)):(i=o=A(e,u.ignoreInitialState),b(\"initialHistory initialized: initialState is not a history\",o))}switch(n.type){case void 0:return i;case u.undoType:return r=U(i,-1),b(\"perform undo\"),T(r),p.apply(void 0,[r,n].concat(l));case u.redoType:return r=U(i,1),b(\"perform redo\"),T(r),p.apply(void 0,[r,n].concat(l));case u.jumpToPastType:return r=S(i,n.index),b(\"perform jumpToPast to \".concat(n.index)),T(r),p.apply(void 0,[r,n].concat(l));case u.jumpToFutureType:return r=P(i,n.index),b(\"perform jumpToFuture to \".concat(n.index)),T(r),p.apply(void 0,[r,n].concat(l));case u.jumpType:return r=U(i,n.index),b(\"perform jump to \".concat(n.index)),T(r),p.apply(void 0,[r,n].concat(l));case w(n.type,u.clearHistoryType):return r=A(i.present,u.ignoreInitialState),b(\"perform clearHistory\"),T(r),p.apply(void 0,[r,n].concat(l));default:if(r=t.apply(void 0,[i.present,n].concat(l)),u.initTypes.some((function(t){return t===n.type})))return b(\"reset history due to init action\"),T(o),o;if(i._latestUnfiltered===r)return i;var g=\"function\"==typeof u.filter&&!u.filter(n,r,i);if(g){var v=d(i.past,r,i.future,i.group);return u.syncFilter||(v._latestUnfiltered=i._latestUnfiltered),b(\"filter ignored action, not storing it in past\"),T(v),v}var m=u.groupBy(n,r,i);if(null!=m&&m===i.group){var h=d(i.past,r,i.future,i.group);return b(\"groupBy grouped the action with the previous action\"),T(h),h}return i=_(i,r,u.limit,m),b(\"inserted new state into history\"),T(i),i}}}n.d(e,\"ActionTypes\",(function(){return i})),n.d(e,\"ActionCreators\",(function(){return u})),n.d(e,\"parseActions\",(function(){return c})),n.d(e,\"isHistory\",(function(){return a})),n.d(e,\"includeAction\",(function(){return p})),n.d(e,\"excludeAction\",(function(){return l})),n.d(e,\"combineFilters\",(function(){return f})),n.d(e,\"groupByActionTypes\",(function(){return s})),n.d(e,\"newHistory\",(function(){return d})),n.d(e,\"default\",(function(){return E}))}])}));"]}